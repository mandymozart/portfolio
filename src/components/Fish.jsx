/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 public/models/Demons/glTF/Fish.gltf -o src/components/Fish.jsx -r public 
*/

import { useAnimations, useGLTF } from '@react-three/drei'
import { useControls } from 'leva'
import React, { useEffect, useRef } from 'react'

export function Fish(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/Demons/glTF/Fish.gltf')
  const { actions } = useAnimations(animations, group)

  const { animation } = useControls("ANIMATION", {
    animation: {
      value: "Idle",
      options: Object.keys(actions)
    }
  })

  useEffect(() => {
    actions[animation].reset().fadeIn(0.5).play()
    return () => actions[animation].fadeOut(0.5)
  }, [animation])
  console.log(actions)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="CharacterArmature">
          <primitive object={nodes.Root} />
          <skinnedMesh name="Fish" geometry={nodes.Fish.geometry} material={materials.Atlas} skeleton={nodes.Fish.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/Demons/glTF/Fish.gltf')
