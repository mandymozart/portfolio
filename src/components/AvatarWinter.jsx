/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 public/models/avatar-winter.glb -o src/components/AvatarWinter.jsx -r public 
*/

import { useAnimations, useGLTF } from '@react-three/drei';
import { useControls } from 'leva';
import { Suspense, useEffect, useRef } from 'react';

export function AvatarWinter(props) {
  const group = useRef();

  const { animations, scene } = useGLTF('/models/avatar-winter.glb');
  const { actions } = useAnimations(animations, group);
  const { animation, timeScale, position, scale } = useControls('ANIMATION', {
    animation: {
      value: 'SwaggerWalkInPlace',
      options: Object.keys(actions),
    },
    timeScale: {
      value: 1,
      min: -1,
      max: 1,
      step: 0.01,
    },
    scale: {
      value: 1,
      min: 0.1,
      max: 100,
      step: 0.01,
    },
    position: {
      x: 2.5,
      y: 50,
      z: 0,
    },
  });

  useEffect(() => {
    if (actions) actions[animation].reset().fadeIn(0.5).play();
    return () => actions[animation].fadeOut(0.5);
  }, [animation]);

  useEffect(() => {
    actions[animation].setEffectiveTimeScale(timeScale);
  }, [timeScale]);
  return (
    <Suspense fallback={null}>
      <primitive
        object={scene}
        ref={group}
        {...props}
        scale={scale}
        position={[position.x, position.y, position.z]}
      />
    </Suspense>
  );
}

useGLTF.preload('/models/avatar-winter.glb');
