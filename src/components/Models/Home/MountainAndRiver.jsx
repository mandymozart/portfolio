'use client';
import useMenuStore from './../../../stores/MenuStore';
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/mountain_and_river_scroll.glb -o src/components/Models/Home/MountainAndRiver.jsx -r public 
Author: Shahriar Shahrabi (https://sketchfab.com/shahriyarshahrabi)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/mountain-and-river-scroll-dd37769bdc0148a988535f893d01c551
Title: Mountain And River Scroll
*/

import { useGLTF } from '@react-three/drei';
import { useControls } from 'leva';
// extend({ LineMaterial });

export function MountainAndRiver({ ...props }) {
  const { nodes, materials } = useGLTF('/models/mountain_and_river_scroll.glb');
  const { colors } = useMenuStore();
  const materialControls = useControls('MOUNTAINS', {
    color: colors.foreground,
    roughness: { value: 0.4, min: 0, max: 1, step: 0.01 },
    metalness: { value: 0.1, min: 0, max: 1, step: 0.01 },
    transmission: { value: 0.9, min: 0, max: 1, step: 0.01 },
  });
  return (
    <group
      {...props}
      dispose={null}
    >
      <group scale={0.01}>
        <group
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        >
          <mesh
            // castShadow
            // receiveShadow
            geometry={nodes.Accesories_VertexCollor_0.geometry}
          >
            <meshPhysicalMaterial
              side={2}
              {...materialControls}
            />
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Accesories_VertexCollor_0_1.geometry}
          >
            <meshPhysicalMaterial
              side={2}
              {...materialControls}
            />
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Accesories_VertexCollor_0_2.geometry}
          >
            <meshPhysicalMaterial
              side={2}
              {...materialControls}
            />
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Accesories_VertexCollor_0_3.geometry}
          >
            <meshPhysicalMaterial
              side={2}
              {...materialControls}
            />
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Accesories_VertexCollor_0_4.geometry}
          >
            <meshPhysicalMaterial
              side={2}
              {...materialControls}
            />
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Accesories_VertexCollor_0_5.geometry}
          >
            <meshPhysicalMaterial
              side={2}
              {...materialControls}
            />
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Accesories_VertexCollor_0_6.geometry}
          >
            <meshPhysicalMaterial
              side={2}
              {...materialControls}
            />
          </mesh>
        </group>
        <group
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        >
          <mesh geometry={nodes.Outline_VertexCollorBackFace_0.geometry}>
            <meshPhysicalMaterial
              side={2}
              {...materialControls}
            />
          </mesh>
          <mesh geometry={nodes.Outline_VertexCollorBackFace_0_1.geometry}>
            <meshPhysicalMaterial
              side={2}
              {...materialControls}
            />
          </mesh>
        </group>
        {/* <mesh
          geometry={nodes.Plane001_Material_0.geometry}
          material={materials.Material}
          position={[-10137.571, 3446.379, 939.938]}
          rotation={[-1.558, 0, 3.138]}
          scale={113.239}
        />
        <mesh
          geometry={nodes.Plane003_Material001_0.geometry}
          material={materials['Material.001']}
          position={[-10016.212, 3757.468, -3755.637]}
          rotation={[-1.58, 0, Math.PI]}
          scale={70.807}
        />
        <mesh
          geometry={nodes.Main_Material002_0.geometry}
          material={materials['Material.002']}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        /> */}
      </group>
    </group>
  );
}

useGLTF.preload('/models/mountain_and_river_scroll.glb');
